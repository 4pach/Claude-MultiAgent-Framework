@echo off
REM Claude MultiAgent Framework Installer (Windows)
REM –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞

setlocal enabledelayedexpansion

REM –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ (Windows 10+)
set "RED=[91m"
set "GREEN=[92m"
set "YELLOW=[93m"
set "BLUE=[94m"
set "CYAN=[96m"
set "BOLD=[1m"
set "RESET=[0m"

REM –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
goto :main

:print_error
echo %RED%‚ùå %~1%RESET%
goto :eof

:print_success
echo %GREEN%‚úÖ %~1%RESET%
goto :eof

:print_info
echo %BLUE%‚ÑπÔ∏è %~1%RESET%
goto :eof

:print_warning
echo %YELLOW%‚ö†Ô∏è %~1%RESET%
goto :eof

:print_header
echo %CYAN%%BOLD%%~1%RESET%
goto :eof

:print_banner
echo %CYAN%‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó%RESET%
echo %CYAN%‚ïë%RESET% %BOLD%Claude MultiAgent Framework Installer%RESET%                  %CYAN%‚ïë%RESET%
echo %CYAN%‚ïë%RESET%                          v1.0.0                          %CYAN%‚ïë%RESET%
echo %CYAN%‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù%RESET%
echo.
echo %BOLD%ü§ñ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞%RESET%
echo %BOLD%   –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é –ò–ò%RESET%
echo.
goto :eof

:check_command
where %1 >nul 2>&1
goto :eof

:check_requirements
call :print_header "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."

set "requirements_met=true"

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
call :check_command python
if !errorlevel! equ 0 (
    for /f "tokens=*" %%i in ('python -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')"') do set python_version=%%i
    python -c "import sys; exit(0 if sys.version_info >= (3, 8) else 1)" >nul 2>&1
    if !errorlevel! equ 0 (
        call :print_success "Python –≤–µ—Ä—Å–∏—è: !python_version!"
    ) else (
        call :print_error "Python 3.8+ —Ç—Ä–µ–±—É–µ—Ç—Å—è (—Ç–µ–∫—É—â–∞—è: !python_version!)"
        set "requirements_met=false"
    )
) else (
    call :print_error "Python –Ω–µ –Ω–∞–π–¥–µ–Ω"
    set "requirements_met=false"
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ pip
python -m pip --version >nul 2>&1
if !errorlevel! equ 0 (
    call :print_success "pip –¥–æ—Å—Ç—É–ø–µ–Ω"
) else (
    call :print_error "pip –Ω–µ –Ω–∞–π–¥–µ–Ω"
    set "requirements_met=false"
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ git (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
call :check_command git
if !errorlevel! equ 0 (
    call :print_success "git –¥–æ—Å—Ç—É–ø–µ–Ω"
) else (
    call :print_warning "git –Ω–µ –Ω–∞–π–¥–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
)

if "!requirements_met!"=="false" (
    call :print_error "–ù–µ –≤—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
    exit /b 1
)
goto :eof

:install_framework
set "project_name=%~1"
set "project_type=%~2"
set "project_scale=%~3"
set "install_dir=%~4"

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
if "%project_name%"=="" (
    call :print_error "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
    call :show_usage
    exit /b 1
)
if "%project_type%"=="" (
    call :print_error "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
    call :show_usage
    exit /b 1
)
if "%project_scale%"=="" (
    call :print_error "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
    call :show_usage
    exit /b 1
)

REM –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
if "%install_dir%"=="" set "install_dir=%cd%\%project_name%"

call :print_header "üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: %project_name%"
call :print_info "–¢–∏–ø: %project_type%"
call :print_info "–ú–∞—Å—à—Ç–∞–±: %project_scale%"
call :print_info "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: %install_dir%"

REM –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if not exist "%install_dir%" mkdir "%install_dir%"
cd /d "%install_dir%"

REM –ó–∞–ø—É—Å–∫ Python –∏–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä–∞
call :print_info "–ó–∞–ø—É—Å–∫ –∏–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä–∞..."

REM –ï—Å–ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
if exist "..\install.py" (
    python ..\install.py --silent --name "%project_name%" --type "%project_type%" --scale "%project_scale%" --dir "%install_dir%"
) else (
    call :print_warning "–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."
    
    REM –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    mkdir monitoring reports recommendations autonomous config logs tests 2>nul
    
    REM –°–æ–∑–¥–∞–Ω–∏–µ framework_init.py
    (
        echo #!/usr/bin/env python3
        echo """
        echo –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Claude MultiAgent Framework
        echo """
        echo.
        echo def initialize_framework(project_type=None^):
        echo     print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Claude MultiAgent Framework..."^)
        echo     print(f"üìã –¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞: {project_type}"^)
        echo     print("‚úÖ –§—Ä–µ–π–º–≤–æ—Ä–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!"^)
        echo     return True
        echo.
        echo if __name__ == "__main__":
        echo     initialize_framework(^)
    ) > framework_init.py
    
    REM –°–æ–∑–¥–∞–Ω–∏–µ requirements.txt
    (
        echo # Claude MultiAgent Framework dependencies
        echo aiosqlite^>=0.19.0
        echo numpy^>=1.24.0
        echo scikit-learn^>=1.3.0
        echo matplotlib^>=3.7.0
        echo jinja2^>=3.1.0
        echo schedule^>=1.2.0
        echo jsonschema^>=4.17.0
    ) > requirements.txt
    
    REM –°–æ–∑–¥–∞–Ω–∏–µ README.md
    (
        echo # %project_name%
        echo.
        echo –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω —Å –ø–æ–º–æ—â—å—é **Claude MultiAgent Framework**.
        echo.
        echo ## –¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞
        echo %project_type% (%project_scale%^)
        echo.
        echo ## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
        echo.
        echo 1. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:
        echo    ```cmd
        echo    venv\Scripts\activate
        echo    ```
        echo.
        echo 2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
        echo    ```cmd
        echo    pip install -r requirements.txt
        echo    ```
        echo.
        echo 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫:
        echo    ```cmd
        echo    python framework_init.py
        echo    ```
    ) > README.md
    
    call :print_success "–ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞"
)

REM –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not "%NO_VENV%"=="true" (
    call :print_info "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    python -m venv venv
    call venv\Scripts\activate.bat
    python -m pip install --upgrade pip
    call :print_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
)

REM –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if not "%NO_DEPS%"=="true" (
    if exist "requirements.txt" (
        call :print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        pip install -r requirements.txt
        call :print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    )
)

REM –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git
if not "%NO_GIT%"=="true" (
    call :check_command git
    if !errorlevel! equ 0 (
        call :print_info "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
        git init
        git add .
        git commit -m "Initial commit: %project_name% with Claude MultiAgent Framework"
        call :print_success "Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
    )
)

REM –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
call :print_success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo.
call :print_header "üöÄ –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:"
echo cd %install_dir%
if not "%NO_VENV%"=="true" echo venv\Scripts\activate
echo python framework_init.py
echo.
call :print_info "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: docs\usage_guide.md"
call :print_info "–ü–æ–¥–¥–µ—Ä–∂–∫–∞: https://github.com/claude-multiagent-framework"
goto :eof

:interactive_install
call :print_header "üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"

REM –í–≤–æ–¥ –∏–º–µ–Ω–∏ –ø—Ä–æ–µ–∫—Ç–∞
:ask_name
set /p "project_name=–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞: "
if "%project_name%"=="" goto :ask_name
REM –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ (Windows batch –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –≤ regex)
echo %project_name% | findstr /r "^[a-zA-Z0-9_-]*$" >nul
if errorlevel 1 (
    call :print_error "–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, _ –∏ -"
    goto :ask_name
)

REM –í—ã–±–æ—Ä —Ç–∏–ø–∞ –ø—Ä–æ–µ–∫—Ç–∞
echo.
call :print_header "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–µ–∫—Ç–∞:"
echo 1. Telegram Bot
echo 2. Web API
echo 3. CLI Tool
echo 4. Data Pipeline
echo 5. Microservice
echo 6. ML Service
echo 7. Desktop App
echo 8. IoT Device

:ask_type
set /p "choice=–í–∞—à –≤—ã–±–æ—Ä (1-8): "
if "%choice%"=="1" set "project_type=telegram_bot" & goto :type_done
if "%choice%"=="2" set "project_type=web_api" & goto :type_done
if "%choice%"=="3" set "project_type=cli_tool" & goto :type_done
if "%choice%"=="4" set "project_type=data_pipeline" & goto :type_done
if "%choice%"=="5" set "project_type=microservice" & goto :type_done
if "%choice%"=="6" set "project_type=ml_service" & goto :type_done
if "%choice%"=="7" set "project_type=desktop_app" & goto :type_done
if "%choice%"=="8" set "project_type=iot_device" & goto :type_done
call :print_error "–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 8"
goto :ask_type

:type_done

REM –í—ã–±–æ—Ä –º–∞—Å—à—Ç–∞–±–∞
echo.
call :print_header "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Å—à—Ç–∞–± –ø—Ä–æ–µ–∫—Ç–∞:"
echo 1. –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π (–±–∞–∑–æ–≤—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥)
echo 2. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ + –∞–ª–µ—Ä—Ç—ã)
echo 3. –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π (+ –ò–ò –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è)
echo 4. –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π (–ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª)

:ask_scale
set /p "choice=–í–∞—à –≤—ã–±–æ—Ä (1-4): "
if "%choice%"=="1" set "project_scale=minimal" & goto :scale_done
if "%choice%"=="2" set "project_scale=standard" & goto :scale_done
if "%choice%"=="3" set "project_scale=advanced" & goto :scale_done
if "%choice%"=="4" set "project_scale=enterprise" & goto :scale_done
call :print_error "–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4"
goto :ask_scale

:scale_done

REM –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
set "default_dir=%cd%\%project_name%"
set /p "install_dir=–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ [%default_dir%]: "
if "%install_dir%"=="" set "install_dir=%default_dir%"

REM –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
echo.
call :print_header "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏:"

set /p "create_venv=–°–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ? [Y/n]: "
if /i "%create_venv%"=="n" set "NO_VENV=true"

set /p "install_deps=–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏? [Y/n]: "
if /i "%install_deps%"=="n" set "NO_DEPS=true"

set /p "init_git=–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π? [Y/n]: "
if /i "%init_git%"=="n" set "NO_GIT=true"

REM –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
call :install_framework "%project_name%" "%project_type%" "%project_scale%" "%install_dir%"
goto :eof

:show_usage
echo –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: %~nx0 [–û–ü–¶–ò–ò]
echo.
echo –û–ø—Ü–∏–∏:
echo   -n, --name NAME           –ò–º—è –ø—Ä–æ–µ–∫—Ç–∞
echo   -t, --type TYPE           –¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞ (telegram_bot, web_api, cli_tool, etc.)
echo   -s, --scale SCALE         –ú–∞—Å—à—Ç–∞–± (minimal, standard, advanced, enterprise)
echo   -d, --dir DIRECTORY       –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
echo   --no-venv                 –ù–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo   --no-deps                 –ù–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo   --no-git                  –ù–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Git
echo   -h, --help                –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
echo.
echo –ü—Ä–∏–º–µ—Ä—ã:
echo   %~nx0                                             # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
echo   %~nx0 -n MyBot -t telegram_bot -s advanced       # –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
goto :eof

:main
call :print_banner
call :check_requirements
if errorlevel 1 exit /b 1

REM –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
:parse_args
if "%~1"=="" goto :args_done

if "%~1"=="-n" (
    set "PROJECT_NAME=%~2"
    shift /1
    shift /1
    goto :parse_args
)
if "%~1"=="--name" (
    set "PROJECT_NAME=%~2"
    shift /1
    shift /1
    goto :parse_args
)
if "%~1"=="-t" (
    set "PROJECT_TYPE=%~2"
    shift /1
    shift /1
    goto :parse_args
)
if "%~1"=="--type" (
    set "PROJECT_TYPE=%~2"
    shift /1
    shift /1
    goto :parse_args
)
if "%~1"=="-s" (
    set "PROJECT_SCALE=%~2"
    shift /1
    shift /1
    goto :parse_args
)
if "%~1"=="--scale" (
    set "PROJECT_SCALE=%~2"
    shift /1
    shift /1
    goto :parse_args
)
if "%~1"=="-d" (
    set "INSTALL_DIR=%~2"
    shift /1
    shift /1
    goto :parse_args
)
if "%~1"=="--dir" (
    set "INSTALL_DIR=%~2"
    shift /1
    shift /1
    goto :parse_args
)
if "%~1"=="--no-venv" (
    set "NO_VENV=true"
    shift /1
    goto :parse_args
)
if "%~1"=="--no-deps" (
    set "NO_DEPS=true"
    shift /1
    goto :parse_args
)
if "%~1"=="--no-git" (
    set "NO_GIT=true"
    shift /1
    goto :parse_args
)
if "%~1"=="-h" (
    call :show_usage
    exit /b 0
)
if "%~1"=="--help" (
    call :show_usage
    exit /b 0
)

call :print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: %~1"
call :show_usage
exit /b 1

:args_done

REM –ï—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–¥–∞–Ω—ã, –≤—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É
if not "%PROJECT_NAME%"=="" (
    if not "%PROJECT_TYPE%"=="" (
        if not "%PROJECT_SCALE%"=="" (
            call :install_framework "%PROJECT_NAME%" "%PROJECT_TYPE%" "%PROJECT_SCALE%" "%INSTALL_DIR%"
            goto :end
        )
    )
)

REM –ò–Ω–∞—á–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
call :interactive_install

:end