name: 🧪 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
    - uses: actions/checkout@v3
    
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
    
    - name: 🧹 Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: 🧪 Test with pytest
      run: |
        pytest --cov=./ --cov-report=xml
    
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  validate-templates:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    
    - name: 📦 Install framework
      run: |
        python install.py --silent
    
    - name: 🧪 Test project templates
      run: |
        python claude_framework_cli.py create --name test-bot --type telegram_bot --output-dir ./test-projects
        python claude_framework_cli.py create --name test-api --type web_api --output-dir ./test-projects
        python claude_framework_cli.py validate --all

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: 🔍 Run security checks
      uses: pypa/gh-action-pip-audit@v1.0.8
